<?xml version="1.0"?>
<launch>
    <arg name="roomba" default=""/>
    <rosparam param="/use_sim_time" >true</rosparam>
    <include file="/home/amsl/catkin_ws/src/darknet_ros/darknet_ros/launch/wrs.launch">
        <arg name="roomba" value="$(arg roomba)"/>
    </include>
    <!-- <node pkg="rviz" type="rviz" name="rviz_pc" args="-d $(find point_cloud_object_detector)/config/pointcloud.rviz"/> -->
    <node pkg="point_cloud_object_detector" type="point_cloud_object_detector_node" name="object_detector" output="screen" >
        <param name="tolerance" value="0.2" type="double"/>
        <param name="min_cluster_size" value="500" type="int" />
        <param name="max_cluster_size" value="6000" type="int" />
        <param name="color_cluster_th" value="40" type="int" />
        <param name="img_th" value="40" type="int" />
        <rosparam command="load" file="$(find point_cloud_object_detector)/config/color_param.yaml"/>

        <remap from="/object_positions" to="roomba$(arg roomba)/object_positions" />
        <remap from="/darknet_ros/bounding_boxes" to="roomba$(arg roomba)/darknet_ros/bounding_boxes" />
        <remap from="/camera/depth_registered/points" to="roomba$(arg roomba)/camera/depth_registered/points" />
        <remap from="/camera/image_rect_color/compressed" to="roomba$(arg roomba)/camera/color/image_rect_color/compressed" />
    </node>
    <!-- <include file="/home/amsl/catkin_ws/src/darknet_ros/darknet_ros/launch/chuo.launch"> -->

    <!-- compressed to raw -->
    <node name="color_republish" pkg="image_transport" type="republish" args="compressed raw">
        <!-- <remap from="in" to="camera/color/image_rect_color" /> -->
        <!-- <remap from="out" to="camera/color/image_rect_color" /> -->
        <remap from="in" to="roomba$(arg roomba)/camera/color/image_rect_color" />
        <remap from="out" to="roomba$(arg roomba)/camera/color/image_rect_color" />
    </node>
    <node name="republish_depth" type="republish" pkg="image_transport" output="screen" args="compressed raw">
        <remap from="in" to="/roomba$(arg roomba)/camera/aligned_depth_to_color/image_raw"/>
        <remap from="out" to="/roomba$(arg roomba)/camera/aligned_depth_to_color/image_raw" />
    </node>
    <node pkg="nodelet" type="nodelet" name="nodelet_magager" args="manager" output="screen"/>
    <node pkg="nodelet" type="nodelet" name="point_cloud_xyzrgb" args="load depth_image_proc/point_cloud_xyzrgb nodelet_magager">
        <remap from="rgb/camera_info" to="/roomba$(arg roomba)/camera/color/camera_info" />
        <remap from="rgb/image_rect_color" to="/roomba$(arg roomba)/camera/color/image_rect_color" />
        <remap from="depth_registered/image_rect" to="/roomba$(arg roomba)/camera/aligned_depth_to_color/image_raw" />
        <remap from="depth_registered/points" to="/roomba$(arg roomba)/camera/depth_registered/points" />
    </node>

    <!-- rosbag recorder -->
    <include file="$(find point_cloud_object_detector)/launch/rosbag_recorder.launch">
        <arg name="roomba" value="$(arg roomba)"/>
    </include>
    <node pkg="rosbag" type="play" name="play" args="--clock -u 300 /home/amsl/bagfiles/spread/roomba$(arg roomba).bag" required="true"/>
</launch>
